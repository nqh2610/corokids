generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  username      String    @unique
  password      String
  name          String
  avatar        String?
  level         Int       @default(1)
  totalStars    Int       @default(0)
  diamonds      Int       @default(5)
  streak        Int       @default(0)
  lastLoginDate DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  progress      Progress[]
  exercises     ExerciseResult[]
  achievements  UserAchievement[]
  @@map("users")
}

model Progress {
  id              String   @id @default(uuid())
  userId          String
  levelId         Int
  lessonId        Int
  completed       Boolean  @default(false)
  starsEarned     Int      @default(0)
  timeSpent       Int      @default(0)
  accuracy        Float    @default(0)
  completedAt     DateTime?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([userId, levelId, lessonId])
  @@map("progress")
}

model ExerciseResult {
  id            String   @id @default(uuid())
  userId        String
  exerciseType  String
  difficulty    Int
  problem       String
  userAnswer    String
  correctAnswer String
  isCorrect     Boolean
  timeTaken     Int
  createdAt     DateTime @default(now())
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@index([userId, createdAt])
  @@map("exercise_results")
}

model Achievement {
  id          String   @id @default(uuid())
  name        String   @unique
  description String
  icon        String
  category    String
  requirement String
  stars       Int      @default(0)
  diamonds    Int      @default(0)
  createdAt   DateTime @default(now())
  users       UserAchievement[]
  @@map("achievements")
}

model UserAchievement {
  id            String   @id @default(uuid())
  userId        String
  achievementId String
  unlockedAt    DateTime @default(now())
  user          User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  achievement   Achievement @relation(fields: [achievementId], references: [id], onDelete: Cascade)
  @@unique([userId, achievementId])
  @@map("user_achievements")
}
